<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <!--WIF 4.5 sections -->
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
  </configSections>
  
  <system.identityModel>
    <identityConfiguration>
      <claimsAuthenticationManager type="sysnova.Infrastructure.Security.ClaimsTransformationModule, sysnova.Infrastructure.Security" />
    </identityConfiguration>
  </system.identityModel>
  
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>
      <property name="connection.connection_string_name">NorthwindConnection</property>
      <property name="show_sql">true</property>
      <property name="current_session_context_class">wcf</property>
      <property name="cache.provider_class">NHibernate.Cache.HashtableCacheProvider</property>
      <property name="cache.use_second_level_cache">true</property>
      <property name="cache.use_query_cache">true</property>
      
    </session-factory>
  </hibernate-configuration>
  
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  
  <connectionStrings>
    <add name="NorthwindConnection" providerName="System.Data.SqlClient" connectionString="Data Source=.\sqlexpress;Initial Catalog=Northwind;User Id=sa; Password=1$%admin;Enlist=False;Pooling=True;Max Pool Size=100" />
  </connectionStrings>
  
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>
  
  <system.serviceModel>

    <bindings>
      
      <basicHttpBinding>
          <binding name="httpBinding">
            <security mode="None">
            </security>
          </binding>        
      </basicHttpBinding>
      
      <wsHttpBinding>
        <binding name="wsHttpBindingSec" maxReceivedMessageSize="65536">
          <readerQuotas maxStringContentLength="65536" maxArrayLength="65536" maxBytesPerRead="65536" />
            <security mode="TransportWithMessageCredential">
              <message clientCredentialType="UserName" />
            </security>
        </binding>
        <binding name="wsHttpBindingNoSCT">
          <security mode="None">
            <transport clientCredentialType="None" />
            <message establishSecurityContext="false" />
          </security>
        </binding>
      </wsHttpBinding>      

    </bindings> 
    
    <services>
      <!--
      <service behaviorConfiguration="defaultProfile" name="sysnova.Services.CRUDService.Service1">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="httpBinding" name="wsHttpService" contract="sysnova.Services.CRUDService.IService1"/>
      </service>
      -->
      <service behaviorConfiguration="WSProfile" name="sysnova.Services.CRUDService.Service1">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpBindingSec" name="wsHttpsService" contract="sysnova.Services.CRUDService.IService1" />
        <endpoint address="mex" binding="mexHttpsBinding" contract="IMetadataExchange" />
      </service>
    </services>
    
    <behaviors>
      <serviceBehaviors>
        <behavior name="WSProfile">
	        <serviceMetadata httpGetEnabled="true" />
              <serviceDebug includeExceptionDetailInFaults="true" />
                <!-- SE REEMPLAZO POR UN HOSTFACTORYCUSTOM Y SE DEFINIO POR PROGRAMACION LOS MISMOS VALORES
                     TUVE QUE HACER UN FACTORY CUSTOM PORQUE NECESITABA INJECTAR EL REPOSITORY Y EN LOS VALIDATORS
                     AUN NINJECT NO CARGABA LAS DEPENDENCIAS
                     
                <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="sysnova.Infrastructure.Security.MyServiceAuthorizationManager, sysnova.Infrastructure.Security">                
                  <authorizationPolicies>
                    <add policyType="sysnova.Infrastructure.Security.CustomAuthorizationPolicy, sysnova.Infrastructure.Security"/>
                  </authorizationPolicies>
                </serviceAuthorization>
                
                <serviceCredentials>
                  <userNameAuthentication
                     userNamePasswordValidationMode="Custom"
                     customUserNamePasswordValidatorType="sysnova.Infrastructure.Security.CustomUserNameValidator, sysnova.Infrastructure.Security" />
                </serviceCredentials>
                -->
        </behavior>        
        
        <behavior>
            <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
            <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
            <serviceDebug includeExceptionDetailInFaults="false" />        
        </behavior>

      </serviceBehaviors>
    </behaviors>
        
    <protocolMapping>
        <add binding="basicHttpBinding" scheme="http" />
    </protocolMapping>    
    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      <!--
      <add name="MyClaimsAuthenticationModule" type="sysnova.Services.CRUDService.MyClaimsAuthenticationModule, WcfCRUDService" />
      HTTPMODULE para manejar las Autenticacion CLAIM MANAGER. Pero no sirve, no se puede manipular el ClaimPrincipal
      -->
    </modules>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Appccelerate.EventBroker" publicKeyToken="917bca444d1f2b4c" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

</configuration>
